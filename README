

12/19/13

indel annotation using own program:
 vikas@vikas-sgm:~/Public/WorkingProjects/CRISP_Picall_dec19_2011/JOINTCODE-coral/newindelcode-jan12013$ python ../PYTHON-scripts/VCF-programs/VCF_annoation_refseq.py ../PYTHON-scripts/VCF-programs/refseq.genes.ncbi37 g1p1.indels.vcf.1  


indel realignment has not yet been implemented into single pipeline (parse, split-map, realign, sort & fixmate) 

use code from CRISP for storing indels + realignment list 

10/30/2013

BUG at end of code localized to:

while (sequence[shift+i] == reflist->sequences[ch][kmertable->locarray[first][1]+i] && i < kmertable->kmer/2+kmertable->gap) i++;
                        j= kmertable->kmer/2+kmertable->gap;
                        while (sequence[shift+j-1] == reflist->sequences[ch][kmertable->locarray[first][1]+j-1] && j > kmertable->kmer/2) j--;

probably a result of uint32_t of cigarlist...## no 
changing MAX_IS to 1000 from 500 fixes bug ?? | previous code also has bug with IS = 500


1 1302304 23M:5D:14I:63M:       18M:7I:10M:2I:63M:      GAPALIGN-match clip:0 CM:0 | RL:1 -> should not be realigned
## code to split DI cigar into multiple cigars... 5D_14I -> 7I_5M_2I -> left shift...
## fcigarlist has 7X -> change to 'M'

## dbSNP indel outside target detected 
1 29572167 17M:11D:12M:1X:48M:  5S:11M:1X:12M:1X:48M:    GAPALIGN-NEW clip:0 | RL:1



1. in new splitreadmap_direct: startt and end should be carried over from previous round, store in kmertable 

2. hashtable is best option for storing candidate indels identified in buffer -> can be queried in O(1) time using position in read (for realignment) | also need to store as list for realignment of individual reads

3. where should we implement left justification of indels in cigar/indel parsing

4. for whole-exome/targeted sequencing: buffer can handle entire chromosomes -> overlap is not an issue | for whole-genome decide 

5. do we want to implement mate-pair fixing that also takes care of pairs mapped to different chromosomes (NO) 

6. add option to only call indels and realign in specific interval: --regions chr1:0-10000000 | multiplex code for whole-genome indel discovery...

7. local de novo assembly to find long insertions/validate deletions etc... (partially mapped reads from Left and Right) | some previous code for doing this 

8. --bedfile to focus indel efforts only in specific regions (exome or targeted) | don't do split-read mapping outside 

============================================= Jan 10 2013 ===========================================

long insertion assembly: 127 bp insertion !
read AGAGGACAAATGCCTGGACCCAGATCCAAGGGGGTGGAACCAGCTGATGAAAGGTGGCTGGGCCCTCTGCCCCCTCCCCAGCCTAGACACTGGCGGAGTGGG ERR024180.11584694   matepair 0:748567 strand + rl:102 | hits 1:3 | 21M81S | 748784:748784-748804:0-20:24.0:-1

read CTAGACACTGGCGGAGTGGCTAGGCCTCCCAGGGCTTGGGGACAGCTAAGCTGTTGGACTCCTCCCTGGCCCCAAACCCAAGAGCAGATGTACCGGAGAA ERR024164.6121234      matepair 0:748933 strand - rl:100 | hits 2:7 | 63S37M | DI-clump:0:1:-4063:48:score:30.4:4090D_27I  | bestpath 37.0 1 | 744677:744702-744712:25-35:11.0:-1 748740:748803-748839:63-99:37.0:-1

AGAGGACAAATGCCTGGACCCAGATCCAAGGGGGTGGAACCAGCTGATGAAAGGTGGCTGGGCCCTCTGCCCCCTCCCCAGCCTAGACACTGGCGGAGTGGG
                                                                                  CTAGACACTGGCGGAGTGGCTAGGCCTCCCAGGGCTTGGGGACAGCTAAGCTGTTGGACTCCTCCCTGGCCCCAAACCCAAGAGCAGATGTACCGGAGAA

browser details YourSeq           55     1   183   183  71.5%    20   +     800785    800840     56


10/28/13

grep -A 2 -B2 D3NJ6HQ1:258:D12WJACXX:2:2214:4159:18536 a1
ACACACATGCACATCATGTACAGACATTTGCAAGTGGGCACACAGGCATACACGCCCACAGACACTCCCACACACCTGCTCGTGCTGCCATCCTCGTCCG 96<DEACD;BDCDDCD@EEDCFEEBCGFEECFEFFFECA?@CCCEEEEEB@AFGFFBDFGEDDAFEFFFEFGFDEEGFEGEFGEFGFEEFGFFFEFFEDE D3NJ6HQ1:258:D12WJACXX:2:2214:4159:18536 1:1276971 1M:1X:98M: XM:1 XC:0
variant 1:1276973:G:GACAC AB:0 GA/GACACA ins->2 94 2 M carryover 0  === ins<- 1 carry 2 newms:0:1:0 MM 0:0 added 0 newpos 1276973 l2 1 NEWCIGAR_RL: 2I 98M 
best 1 1 0 	realignments 1

buffer based realignment is able to realign this read while previous code did not ?? | read is PCR duplicate 

-------------------------------------------------------------------------------------------------------


08/08/13 example where consensus mapping can find right indel...

[vbansal@tscc-login1 WGS-bams]$ /home/vbansal/PROGRAMS/JOINTCODE-coral/newindelcode-jan12013/testmapper --bam NA12878_S1.bam.chr20 --ref /projects/stsi/vbansal/reference-genomes/NCBI37/hg19.illumina.fa --out b.vcf --minreads 4 --complexindels 1 > b


chr20: NA12878_S1.bam.chr20
read GGATCTGATAATCTAGTATTAGACGCATAGTACAGTAGTGAACTTTCAGCCTCTAGAGAAGTTTGCATTCACAGGAAGACTATAAATAACTTCCAATAGAA HSQ1004:134:C0D8DACXX:4:2107:5297:8147        matepair 20:134864 strand + rl:101 | hits 4:23 | 62M:39S: 0 | D-clump:0:1:-1423:89:score:73.6:1423D D-clump:1:2:-3800:33:score:58.7:3800D DI-clump:0:2:-5223:71:score:44.7:5243D_20I ID-clump:0:3:25:72:score:55.9:4D_29I  | bestpath 73.6 1->0
chr20 135055 58M:1423D:31M:12S: 62M:39S:         GAPALIGN-NEW |
0:135054:135054-135115:0-61:62.0:-1 1:136477:136535-136565:58-88:73.6:0 2:140277:140359-140367:82-90:58.7:1 3:135029:135120-135129:91-100:55.9:0
## 4D29I is the correct indel but 1423D is also possibility... but has clipping..
## if we store multiple cigars for each read and choose best...
## 1423D cannot be right since for inward facing reads, it would result in crossing the mate !!



=============================================================================================================

08/08/13  | extension can lose hits, for repeats use smaller nbd for hhits...

do X-drop extension in region with low-complexity k-mer... GTGTGTGT hit will be very high freq...
1. either filtered out in first filter (> 64) or difficult to decide which one is correct...
sol: add the hits later to the list (first go over unique ones)..... add close to diagonal....


offset 21 trying to reduce number of hits 8 by extension j:8 -> new_hits 2
offset 25 trying to reduce number of hits 11 by extension j:5 -> new_hits 4
offset 29 trying to reduce number of hits 11 by extension j:4 -> new_hits 2
offset 33 trying to reduce number of hits 8 by extension j:1 -> new_hits 1
offset 78 trying to reduce number of hits 7 by extension j:3 -> new_hits 1
repetitve 90:9 0 | repetitve 91:11 0 | repetitve 92:8 0 | read CCCGTCCCCTCCCCACCCGGCCCCTCCACCTCCACCACACACGGACCCTCCACCTCCACCATACATGACCCCACCATCTCTACCACACATAGACCCTCCAC ERR091573.198318799         matepair 0:4580437 strand + rl:101 | hits 19:49 | 21S:10M:1X:9M:1X:1M:1X:57M: 3 | D-clump:11:12:-96:46:score:35.6:96D D-clump:7:12:-72:51:score:41.4:72D D-clump:6:12:-360:56:score:42.7:360D DI-clump:5:12:-168:59:score:42.3:169D_1I DI-clump:4:12:-312:64:score:46.4:313D_1I DI-clump:1:12:-48:64:score:47.0:52D_4I D-clump:6:13:-216:68:score:55.4:216D DI-clump:5:13:-24:70:score:55.1:26D_2I DI-clump:4:13:-168:75:score:57.3:170D_2I D-clump:12:17:-195:46:score:34.6:195D D-clump:11:17:-291:46:score:33.9:291D D-clump:10:17:-51:46:score:36.6:51D DI-clump:8:17:-123:48:score:35.4:126D_3I DI-clump:7:17:-267:48:score:30.2:270D_3I D-clump:13:18:-96:57:score:45.9:96D  | bestpath 57.3 13->4
1 4580588 24S:18M:170D:2I:57M:  21S:10M:1X:9M:1X:1M:1X:57M:      GAPALIGN-NEW |
0:4584588:4584597-4584605:9-17:9.0:-1 1:4580827:4580848-4580865:21-38:18.0:-1 2:4580971:4580992-4581009:21-38:18.0:-1 3:4581172:4581195-4581212:23-40:18.0:-1 4:4580563:4580587-4580604:24-41:18.0:-1 5:4580707:4580736-4580748:29-41:13.0:-1 6:4580515:4580548-4580559:33-44:12.0:-1 7:4580803:4580841-4580863:38-60:24.3:4 8:4580947:4580985-4581007:38-60:28.3:1 9:4581142:4581184-4581193:42-51:14.0:4 10:4581019:4581062-4581082:43-63:22.0:2 11:4580779:4580822-4580843:43-64:22.9:4 12:4580875:4580918-4580963:43-88:47.0:1 13:4580731:4580775-4580831:44-100:57.3:4 14:4580923:4580977-4580987:54-64:16.6:7 15:4580659:4580721-4580738:62-79:18.0:-1 16:4580467:4580531-4580555:64-88:25.0:-1 17:4581070:4581134-4581158:64-88:36.6:10 18:4580827:4580908-4580927:81-100:45.9:13


repetitve 25:22 4 | repetitve 26:24 4 | repetitve 27:22 4 | repetitve 28:24 4 | offset 35 trying to reduce number of hits 13 by extension j:6 -> new_hits 1
offset 39 trying to reduce number of hits 13 by extension j:2 -> new_hits 1
read CACCCCCCCCAATGTTTGTGTGTGTGTGTGTGGGTGTGTGTGTGTGTGTTTAGATAGGAAGTGTGTGGATCATTTCTTTTTTTTTTTTGACTCATCTGCTG ERR091571.65218283    matepair 0:4568943 strand + rl:101 | hits 6:21 | 18S:14M:1X:68M: 1 | I-clump:0:2:2:85:score:78.5:2I  | bestpath 78.5 2->0
1 4569164 15S:16M:2I:68M:       18S:14M:1X:68M:  GAPALIGN-NEW |
0:4569148:4569163-4569179:15-31:17.0:-1 1:4574289:4574320-4574332:31-43:13.0:-1 2:4569146:4569179-4569246:33-100:78.5:0 3:4569145:4569222-4569232:77-87:11.0:-1 4:4569144:4569222-4569231:78-87:10.0:-1 5:4569143:4569222-4569230:79-87:9.0:-1

-------------------------------------------------------------------------------------------------------------------------------

JUly 22 2013

using kmertable with gap in middle allows for covering mismatches in seeds

111110000011111 = 15bp seed

read GGCAAGGGTCCCTCTGGGCTGCTGTCCATGCTGTGAGTGTCCGTGCTGTGGGCCGCTGCCGTGGGTGTCCGTGCTGTGGCCTGCTGTCGTGGGGGGCCGG D3NJ6HQ1:258:D12WJACXX:3:2308:8192:78730       matepair 0:851722 strand - rl:100 | hits 5:22 | 54M:1X:38M:7S: 1 | NOINDEL:1:3:0:37:score:36.0:8  | bestpath 93.0 0 | gapped 0 | 93M
0:851702:851702-851794:0-92:93.0:-1

July 19 2013

what we are doing is restricting SW search to seed-hits and neighboring regions rather than whole 2-D matrix... 
add smaller seeds near bigger seed matches to make it easier 

for small insert size, current code is restrictive

CHECK for accuracy: able to reconstuct same alignment as BWA/NOVO for all reads plus better for indel reads 


for smaller k-mer size table, use lower bits for sub-table index... 
store many tables each of k-mer size 7/8 (10,000) 4^7 = 2^14 = 16 
same table as 11-mer but first 3 bits are actually index of window... neighborhood of seeds of k-mer size 11 

dynamic programming algorithm to find best alignment that uses subset of the chains found using k-mer search: pevzner, gelfland paper in PNAS for gene finding: http://www.pnas.org/content/93/17/9061.full.pdf 
We reduce the exon assembly problem to the search of a path in some (unweighted) graph. Vertices in this graph correspond to the blocks, arcs correspond to potential transitions between blocks, and the path weight is defined as the weight of the optimal alignment between the concatenated blocks of this path and the target sequence

cluster_hits
	(a) duplicate clusters probably due to non-adjacent in list... fixed..
	(b) shorten list after every merge.
	(c) merge two hhits on same diagonal that can be joined by one mismatch -> can never be better than gap...
	

1. for parsing indels to be used for realignment
	(a) complex indels on same haplotype as single (store CIGAR)
	(b) filter on indels based on soft-clipping: at least one non-clipped indel
	(c) left-justified indel

2. for realignment
	(a) soft-clip based on SW score before realignment ?
	(b) scoring scheme for comparing original cigar to new cigar 
	(c) how to penalize known indels... (frequency, counts, etc)
	(d) prior penalty for indel based on length: empirical distribution in human genome (Venter..) 
	(e) left-align indel unless it matches known indel....
	(f) for long insertions that are not aligned due to seq. error -> compare score of single-read-cigar vs joint-multi-read-cigars.... -> it should fix it 




June 14 2013 

BUG chrM    5753    .       T       TT      .       PASS    SREADS=28,27,0;HOMLEN=1;SVLEN=1;TYPE=GAPPED-INS;HOMSEQ=G


realignment -> code to push indels to left in reads that are already well aligned 

##SRR028812.4915641 (33S7M3I37M -> 33S5M3I39M) in 200 exomes data 

SRR028812.16349358      16      20      74309   47      36S2M2D42M      *       0       0       GATGATGACTAGTGCTTCGTTGTCTTCGATGGCTCCTACCCGTTTCTCCCACTGGTTGAACATTCCAGCCTCTGTCTCCT        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%86<69@367379???<5):+@A.*-1=?+@@B>9@@4@B@A@B        X0:i:1  X1:i:0  OC:Z:36S44M     XC:i:44 RG:Z:SRR028812  XG:i:0  NM:i:2  XM:i:2  XO:i:0  OP:i:74311      XT:A:U
## not realigned -> confirmed by blat AA [CT]2D 42M 
## fixed bug 

1. push indels to left in cigar
2. clip aligned reads that go into low base quality '####' region (for bams that did not use the -q option)
3. change cigar for novoalign/stampy reads that add 'I' at end of read -> end-to-end alignment vs soft clipped alignment 


================================================================================================================================================


June 10 2013

<<<<<<< .mine
overlapping PE reads -> handled ??

in findhits.c -> restriction on position of seed "matepos+shift -kmertable->locarray[first][1] > 0" which limits overlapping PE reads !!
if matestrand == '-': matepos increased by readlength

Illumina reads are FR (first read on forward strand and second read on reverse strand)...

        ---------R1---->
                   <---------R2-----


novoalign vs bwa: good example

D3NJ6HQ1:259:D10C5ACXX:1:1116:15638:22087       99      1       1276961 70      13M4I83M        =       1276974 108     ACACCTCATGCAGACACACACATGCACATCATGTACAGACATTTGCAAGTGGGCACACAGGCATACACGCCCACAGACACTCCCACACACCTGCTCGTGC    @CCFFFFFGHDHFJJIIJJJGIJJGIJJJIIIJGFIGGHJIIIIGIBHIBDGFGIJJJIEGHHGECHG=E?DBDCBEEDCDDDDCD?BDDDDCBDDB5<@    PG:Z:novoalign  AS:i:64 UQ:i:64 NM:i:4  MD:Z:96 PQ:i:126        SM:i:70 AM:i:70
D3NJ6HQ1:259:D10C5ACXX:1:1116:15638:22087       147     1       1276974 70      5S95M   =       1276961 -108    GACACACACATGCACATCATGTACAGACATTTGCAAGTGGGCACACAGGCATACACGCCCACAGACACTCCCACACACCTGCTCGTGCTGCCATCCTCGT    CA<<BCDCDEDCCBDDDDDDCCCC@DCCDC@DCCEEDEEFFFFDDEEGEEEE@B@FHGHDFHFB9??B9JHFD?FFBIGGIGDIIHGFHFHFDADFD@B@    PG:Z:novoalignAS:i:64   UQ:i:64 NM:i:0  MD:Z:95 PQ:i:126        SM:i:70 AM:i:70

D3NJ6HQ1:259:D10C5ACXX:1:1116:15638:22087       99      1       1276676 29      6M1D30M2D8M8I9M2I6M2I9M20S      =       1276969 393     ACACCTCATGCAGACACACACATGCACATCATGTACAGACATTTGCAAGTGGGCACACAGGCATACACGCCCACAGACACTCCCACACACCTGCTCGTGC    @CCFFFFFGHDHFJJIIJJJGIJJGIJJJIIIJGFIGGHJIIIIGIBHIBDGFGIJJJIEGHHGECHG=E?DBDCBEEDCDDDDCD?BDDDDCBDDB5<@    XT:A:M  NM:i:22 SM:i:29 AM:i:29 XM:i:7  XO:i:5  XG:i:15 MD:Z:4A1^A6C5G6G10^AT1A2G16T10
D3NJ6HQ1:259:D10C5ACXX:1:1116:15638:22087       147     1       1276969 29      100M    =       1276676 -393    GACACACACATGCACATCATGTACAGACATTTGCAAGTGGGCACACAGGCATACACGCCCACAGACACTCCCACACACCTGCTCGTGCTGCCATCCTCGT    CA<<BCDCDEDCCBDDDDDDCCCC@DCCDC@DCCEEDEEFFFFDDEEGEEEE@B@FHGHDFHFB9??B9JHFD?FFBIGGIGDIIHGFHFHFDADFD@B@    XT:A:U  NM:i:3SM:i:29   AM:i:29 X0:i:1  X1:i:0  XM:i:3  XO:i:0  XG:i:0  MD:Z:0T0G2G95


===================================================================================================================================

June 4 2013

BUGGY CODE ?? |  2       161265789       .       C       CTT     .       PASS    SREADS=3,0,0;HOMLEN=14;SVLEN=2;TYPE=GAPPED-INS;HOMSEQ=TTAAAAAAAAAAAA

removed hard clip from cigarlist[] -> makes all the rest of the code consistent with novoalign reads 


1. make sure hard clips are handled properly for novoalign in realignment....

2. soft clip near ends that contains SNP -> extend similar to indels... in indel realignment code...

3. realignment code doesn't add back 'H' tag to cigar... simple... fix.

==========================================================================================================================================

June 3 2013 

example of BWA completely wrong mapping:

D3NJ6HQ1:258:D12WJACXX:2:2105:10648:5957	99	1	121484572	29	38S43M19S	=	121484727	255	AGAGGCCTTCGTTGGAAACGGGTTTTTTCATGTAAGGGTAGACAGAAGAATTCCCAGTAACTTCCTTGTGTTGTGTGCATTCAACTCACAGAGTTGAACG	@C@FFFFFHHHHHJIICGIGII?FCHIJBFIIFHIIJJ8DDDBFC=CF9FCFCCCEE@;C;?EAC?E3?BEDAED;;;>@D###################	XC:i:81	XT:A:M	NM:i:8	SM:i:29	AM:i:29	XM:i:8	XO:i:0	XG:i:0	MD:Z:9T0C4T8G1T0C4A7G2

vs novoalign

'D3NJ6HQ1:258:D12WJACXX:2:2105:10648:5957	99	1	121484702	70	27M1D54M19H	=	121484730	125	AGAGGCCTTCGTTGGAAACGGGTTTTTTCATGTAAGGGTAGACAGAAGAATTCCCAGTAACTTCCTTGTGTTGTGTGCATT	@C@FFFFFHHHHHJIICGIGII?FCHIJBFIIFHIIJJ8DDDBFC=CF9FCFCCCEE@;C;?EAC?E3?BEDAED;;;>@D	PG:Z:novoalign	AS:i:136	UQ:i:136	NM:i:4	MD:Z:10T10T5^C10C43	PQ:i:257	SM:i:70	AM:i:70

BWA using wrong insert size !!

## compare BWA and novoalign read alignments head to head...
[vbansal-scripps@tcc-5-12 novoalign-paramtest]$ paste G1P1.bwa.sam.11cols G1P1.novoalign.sam | awk '{ if ($4 != 0 && $15 != 0 && ($5 >= 30 || $16 >=30) && ($4 -$15 > 40 || $15 -$4 > 40)) print; }' > different



========================================================================================================================

## extract indels into VCF file for realignment (nosplit ==1, don't do indel detection)
./testmapper --bam DATA/G1P1.merged.picard.bam  --ref DATA/ncbi37.fa --complexindels 1 --nosplit 1 --out DATA/G1P1.indels.vcf.new > G1P1.log

## do indel realignment using VCF file 
./INDELrealigner --bam DATA/G1P1.merged.picard.bam  --ref DATA/ncbi37.fa --out G1P1.new.bam --VCF DATA/G1P1.indels.vcf.new > g1p1.log

example of reads out of order in new bam file 

D3NJ6HQ1:259:D10C5ACXX:2:1104:15274:38622       99      1       120612034       29      7M9I38M46S      =       120612079       147     TCCTCCTCCTCCTCCGCCGCCGCCGCCGCCGCCGCCTGGGCAGATCCACATGGGGAGGGGGTCCCGATAGAGGAGCCCCACTCTCTCCTCCCCTCCTCCT    CCCFFFFFHHHHHJJJJJIJJJIJGIIGHFBEDBDD@?BBDDDDCDDDDCCCCDDDBBDBD0;BDDD;B>CDD@@B@DD7>8ACDC@CCCDDDCDD?CC9    XT:A:M  NM:i:1  SM:i:29 AM:i:29 XM:i:1  XO:i:0  XG:i:0  MD:Z:8T38       OP:i:120612032  OC:Z:7S47M46S
D3NJ6HQ1:259:D10C5ACXX:3:1115:7934:21236        99      1       120612033       29      8M9I64M19S      =       120612105       172     CTCCTCCTCCTCCTCCGCCGCCGCCGCCGCCGCCGCCTGGGCAGATCCACATGGGGAGGGGGTCCCGATAGAGGAGCCCCACTCTCTCCTCCCCTCCTCC    CC@FFFFFHHGHHIJJJGGIFIIJIIJGGJHBDBDDDDDDDDD@?CDCCDDDD?B??B;@<B5<8AB7BBBDCB(8ABB>BBBDDCCDCDC>BDDBDDDD    XT:A:M  NM:i:1  SM:i:29 AM:i:29 XM:i:1  XO:i:0  XG:i:0  MD:Z:8T64       OP:i:120612032  OC:Z:8S73M19S

==================================================================================================================================

Jan 13 2013

in blat indel mapper -> allow overlapping paired-end reads ...

D3NJ6HQ1:259:D10C5ACXX:1:1116:15638:22087	99	1	1276676	29	6M1D30M2D8M8I9M2I6M2I9M20S	=	1276973	393	ACACCTCATGCAGACACACACATGCACATCATGTACAGACATTTGCAAGTGGGCACACAGGCATACACGCCCACAGACACTCCCACACACCTGCTCGTGC	@CCFFFFFGHDHFJJIIJJJGIJJGIJJJIIIJGFIGGHJIIIIGIBHIBDGFGIJJJIEGHHGECHG=E?DBDCBEEDCDDDDCD?BDDDDCBDDB5<@	MD:Z:4A1^A6C5G6G10^AT1A2G16T10	XG:i:15	AM:i:29	NM:i:22	SM:i:29	XM:i:7	XO:i:5	MQ:i:29	XT:A:M

read aligned incorrectly for some reason by BWA ??? wrong position ?? realign this .... can be fixed in blatindelmapper code 

## decide which reads to check in blat indelmapper code ...


BUG in realignment code: complex indel near end of read

(rl->cigs > 0 || t > 0)) -> check ensures that either there is a cigar prior or t !=0

for RL -> condition needs to be changed !!


===============
THINGS TO DO
===============

Tandem duplications: example 

GGTTAATTCTATGGAATATAGTTGTTGATAAATTGCACGAACTTAGCTCCATTCTCTCTTCCAGCTGATTTGCCTAGAGCCTGGGAGTGTCACTGACGTGCC 20   +    2165002   2165104
aggtgaaaacatctggtgggttaattctatggaatatagttgttgataaattgcacgaacttagctccattctctcttccagctgatttgcctagagcctgg 20   +    2164984   2165085 

0. generate haplotypes for the reference and indel alleles 
1. feasible to incorporate block substitutions -> replace whole thing 
2. ignore 'D'/'I' after insertion/deletion event added in read cigar...
3. for R->L, cigar is in reverse order, plus need to determine new starting position of read..use l2
4. indels with 1-2 ambiguity in position -> consolidation into single indel.... long insertions in particular...
5. clip ends of reads that are very poorly aligned and that cannot be fixed (3-4 1X 1X...) 
6. ignore alignment into low-quality end of reads (clipped by BWA)
7. indel left shift using cigar string (freebayes leftalign), for long insertions, solidify indels 
8. include split-mapped indels for realignment, important question -> are the reads containing these indels partially mapped ?  this will allow for long deletions in BAM file, incorporate STAMPY indels or PINDEL

KEY OBSERVATION: with long reads (> 100 bp) -> most indel containing reads (except those with long ins in middle) are partially mapped by BWA !!


==========================================Jan 8 2013 ==================================================

## extend matches to start/end of read if score is good
read CGTACCTGAGTATTCTCATTACTATCCCTGCAGCACAAATGACTCCAAGCTTAATAGTATAAAACAGCAACCATTTAAAAGAGCAAATCCAAGACAACTCGT ERR024175.22311781   matepair 0:5655801 strand - rl:102 | hits 2:15 | 76M26S | DI-clump:0:1:-40:90:score:80.3:41D_1I  | bestpath 80.3 1->0 | 5655547:5655547-5655622:0-75:76.0:-1 5655587:5655664-5655677:77-90:80.3:0


## same here -> haplotype but block substitution -> no indel two SNPS
read TTAGAGCCTGGGAGTGTCACTGACGTGCCAGGTGAAAACATCTGGTGGGTTAATTCTATGGAATATAGTTGTTGATAACTTGCAGGAACTTAGCTCCATTCT ERR024164.7516427    matepair 0:2165038 strand - rl:102 | hits 3:14 | 29S42M31S | ID-clump:1:2:0:66:score:56.1:7D_7I  | bestpath 2 1 56.1 | 2165074:2165075-2165103:1-29:29.0:-1 2164954:2164983-2165031:29-77:49.0:-1 2164954:2165039-2165055:85-101:56.1:1


## mismatches rather than indels
read AATTCCAAACCAACCAAATATATTCAACATTTCCTGTGGTATTTCCTTCAGAAAACAAAACAGCCTGTAATCCCATCATTTTACGACTACAAATAACCACTA ERR024183.28328715   matepair 0:279786 strand - rl:102 | hits 2:5 | 23S59M20S | ID-clump:0:1:0:49:score:39.4:6D_6I  | bestpath 1 0 39.4 | 279548:279575-279602:27-54:28.0:-1 279548:279609-279629:61-81:39.4:0

## 26D 1I incorrect ??
read AACAGTGAGTCCACTAAACTTGTTTCCTTTATAAATTACCCAGTCTCAGGTATGTCTTTATTTTATTTTATTTTATATTATTTTTGAGACAGAGTCTTGC ERR024185.19055772     matepair 0:680254 strand - rl:100 | hits 9:31 | 84M16S | D-clump:0:7:-25:100:score:93.8:25D  | bestpath 7 0 93.8 | 680061:680061-680136:0-75:76.0:-1 680096:680152-680169:56-73:18.0:-1 680066:680122-680141:56-75:20.0:-1 680071:680127-680146:56-75:20.0:-1 680076:680132-680151:56-75:20.0:-1 680081:680137-680156:56-75:20.0:-1 680091:680147-680166:56-75:20.0:-1 680086:680142-680185:56-99:93.8:0 680056:680117-680131:61-75:15.0:-1



## if we keep indels in same read separate -> need code to realign over multiple close indels 

## how to combine indels close to each other -> canonicalization

added support to output complex indels as block substitutions -> best would be to realign these reads using BLAT-like mapper so that the cigar is consistent across all reads..

CRISP variant calling needs to be updated to use haplotypes instead of single base positions.... -> challenging 

realignment does not support complex indels for now, only single simple indels, added support 

## when parsing indel cigars -> if collapsed indel cigar matches known indel -> change it for consistency...

======================================Jan 7 2013 =====================================================


## there are mismatches nearby for this indel... so current parsing is not quite correct.
1S 73M 3D 3M 2I 23M GAPPED-DEL 20 85866 ERR024176.19306607 newcigarlen 5 AGGTCCGGCTGCGCAGAGAGTCAAAGCAGGAAAATCACAGATTCTTCCCAGCAGGCTACAGCCTACAGAGCGGCTGGGACGGGATGGGCTGGAACATGCTGT | 1S 73M 6D 5I 23M


## GPRC6, 3 indels actually one complex indel 4D_10I
## samtools view /projects/stsi3/PROJECTS/T2D-pooledseq/T2D-pooledseq-mergedbams/G1P1.merged.picard.bam 6:117113760-117113772 | grep 3I
D3NJ6HQ1:258:D12WJACXX:1:2210:8763:55597	147	6	117113742	29	20M2I1M1I3M3I70M	=	117113612	-224	
TGGCTTCATTGTAATTCTCA GGTAATTTCC TGCCTTTGAAAGCAAATATGAAGCAAATGAAGGCCAGGATGGCAATGTAGCCCAGCATGGTGCCAAATGC	??:;@>;ACA;>C@C;C?;BDEAHGHHEJJIHDIIHIJJJJIIDIIGIGIHGIJIIIJGIGJIIJIJJIGJJIHJIGGIJIJJIJJJHHHHHFFFFFCC@	XT:A:M	NM:i:6	SM:i:29	AM:i:29	XM:i:0	XO:i:3	XG:i:6	MD:Z:94

## BWA cigar is complex instead of 26D_1I -> need to be consistent -> how we do fix this 
## when parsing cigar -> all indels in one read that are close to each other go together ... 3D2M22D = 27D  -> 2I  (first base is same)
## 20      680136  .       ATTT    A       .       PASS    SREADS=2,5,0;HOMLEN=1;SVLEN=-3;TYPE=GAPPED-DEL;HOMSEQ=T
## 20      680141  .       ATTTTATTTTATTTTATTTTATT A       .       PASS    SREADS=2,5,0;HOMLEN=2;SVLEN=-22;TYPE=GAPPED-DEL;HOMSEQ=TT
## 20	   680137 	  Ttttattttattttattttattttatt TA  haplotype based 
## TTT -> -, TA -> TA, TTTTATTTTATTTTATTTTATT - =====> TTTTATTTTATTTTATTTTATTTTATT TA  
##ERR024169.10784096	163	20	680071	29	1S66M3D2M22D33M	=	680303	332	CTCCACTAAACTTGTTTCCTTTATAAATTACCCAGTCTCAGGTATGTCTTTATTTTATTTTATTTTATATTATTTTTGAGACAGAGTCTTGCTCTGTCACCC	=GFGGGGFDEFDFEFFDGGGGDGGGGFFGGDDFFAFFBDEF??CDDADDDDEAFEC6EB>@*E>>A>ACDBBGFFGA*BE-EDBBBBEBE?CEABB@B-D@B	XT:A:M	NM:i:25	SM:i:29	AM:i:29XM:i:0	XO:i:2	XG:i:25	MD:Z:66^TTT2^TTTTATTTTATTTTATTTTATT33

## this read is alignable with 1423 deletion but the mate is before that ! -> evidence against deletion ??
## when doing realignment -> need to take care of this 
read ATTAAATGAATCTAAGAAGGATCTGATAATCTAGTATTAGACGCATAGTACAGTAGTGAACTTTCAGCCTCTAGAGAAGTTTGCATTCACAGGAAGACTATA ERR024183.17538354   matepair 0:83215 strand - rl:102 | hits 1:13 | indel-near-end 83036:83037-83115:1-79:4,4
ERR024183.17538354	163	20	83038	29	1S79M22S	=	83216	278	ATTAAATGAATCTAAGAAGGATCTGATAATCTAGTATTAGACGCATAGTACAGTAGTGAACTTTCAGCCTCTAGAGAAGTTTGCATTCACAGGAAGACTATA	GGGGGGGGGGGGGGGGGEGGGGGGGGGGGGGGGGGGGGGGGGEGGFGGEGGGGGGGEGGGGGGGGGGGGEFGGGEGBEFCFGGFGFFGEEE?E?EEEEEGEE	XT:A:M	NM:i:0	SM:i:29	AM:i:29XM:i:0	XO:i:0	XG:i:0	MD:Z:79


## DI event 4bp deletion followed by 29 bp insertion
read CAGCCTCTAGAGAAGTTTGCATTCACAGGAAGACTATAAATAACTTCCAATAGAAGTAACTAAAAAGATGGAAATGTTCTAAATCTGTACTATACAATAT ERR024163.18566595     matepair 0:83266 strand - rl:100 | hits 2:11 | I?-clump:0:1:25:71:score:0.0 83100:83100-83115:0-15:0,0 83075:83120-83174:45-99:0,4


============================= Jan 3 2013 ======================================================

vikas@vikas-sgm:~/Public/WorkingProjects/CRISP_Picall_dec19_2011/JOINTCODE-coral/newindelcode-jan12013$ time ./INDELrealigner --bam DATA/G1P1.merged.picard.bam --ref DATA/ncbi37.fa --VCF DATA/G1P1.indels.vcf --out G1P1.realigned.bam > G1P1.full.log.jan3

## if read has one mismatch -> should we realign ???

## should we allow two mismatches in realignment ??
CGCGCACACACACACACACACACACACACACACACAGTCAAACCACCTACCAGAAAAGCTGAACTATTCTTCTCTCCTATCACCAGTTGCAAGAGTGTCA #######DECDEEEFABACACACACAEAEBFEFDFFEEFFECEEEFFFDFGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFGEGGGGGGGGGGGGGGGFGG ERR024169.18573417 20:17499 1M:1X:2M:1X:1X:1X:93M: XM:4 XC:0
variant 20:17506:G:GAC AB:0 GA/GACA ins->7 91 7 M carryover 0  === ins<- 6 carry 0 newms:2:4:0 MM 2:0 added 0 newpos 17501 l2 1 NEWCIGAR_RL: 5M 2I 93M


1. when we ignore I/D after indel event -> need to count those events as extra mismatches for reference alignment...

33I -> 20:187411:G:GTGAAGACCTGGTCCCCACCCCCGTTTTTACCCA -> not present in any CIGAR but found via split-read mapping -> 8 reads realigned with insertion !! plus many with partial insertion (15I, 27I -> what to do about these reads ??) atleast they are not misaligned


================================Jan 2 2013 ========================================================

fixed many bugs, changed code 
# of realigned reads LR is 2x the number of reads R->L (same pattern in BAM file so probably nothing wrong with code)

## filter these realignments --> need to be clipped..
GAAACAGAAAAAAAAAAAAATGGAGGTGTGACTAATTGGATGTGGGAGTTTACAATCCTGTTGGGATGGGAAATCCTACCCATAGAACCTCTCCCTGACT #CA>4:3DDDDDDBDDDECA;DBDD@??7?)GHHEJIIHIDIIIHGBIIHIEIGHGIGCIJJIIHG>JICHFG>GEHAGGJIIGHEAFFADDFFFFF@@@ D3NJ6HQ1:258:D12WJACXX:1:1112:7488:42203 1:120613810 1S:2M:1X:1X:1M:1X:1X:1M:1X:90M: XM:5 XC:1
variant 1:120613819:GA:G AB:9 GAAAAAAAAAAT/GAAAAAAAAAT  === del:10 newms:4:5 added 0 pos 120613810 l2 -1 NEWCIGAR_RL: 1S 10M 1D 89M



============================Jan 1 2013 ======================================

rewrote code for indel realignment that reads BAM file and VCF file with indels -> output new bam file 

in parse_bam_indel -> handle indel haplotypes (no need for SNP + indel haplotypes) 

complex indels -> block substitutions...
## example in NA18507 bogus example -> longer deletion event
20      83115   .       G       GTT     5       PASS    COUNTS=2,3;UNIQUE=5,SAMPLES=4
20      83118   .       C       CAT     5       PASS    COUNTS=2,3;UNIQUE=5,SAMPLES=4
20      83120   .       C       CACAGGAAGACTATAAATAACT  5       PASS    COUNTS=2,3;UNIQUE=5,SAMPLES=4




## only move into soft-clip region if no previous 'M'
CAGCGGGAGCAGGAATGCGCCAGACCCCCCACTCCTATTGTCCCGCGCCAACCAAGAATTCTGCCCTCCCCACTCACTGCTTTTTTTTTTTTTCTTCAAA #########################################B85@9387?:3>3@3:C9?87;;<>7BHEC===)8==C:>IIIHGG?DFBHDDDDD@@@ D3NJ6HQ1:259:D10C5ACXX:1:1205:4047:25705 1:33330003 41S:39M:1D:20M: XM:0
variant 1:33330042:C:CT AB:14 CTTTTTTTTTTTTTTC/CTTTTTTTTTTTTTTTC  === ins<- 79 carry 0 S....41 0 41 
variant 1:33330042:CT:C AB:13 CTTTTTTTTTTTTTTC/CTTTTTTTTTTTTTC  === 
variant 1:33330056:TC:T AB:0 TCT/TT  === del:93 S....41 0 15 newms:1:0 added 15 pos 33329987 l2 -17 NEWCIGAR_RL: 26S 68M 1D 6M 




## extra indels due to poor BWA alignment (clean it up before realigning??) incorrectly aligned
GGTATCTAGTGGTATTAAACATATGTGGGAGAAATACAGCTCAGCAAACTCTTCCAGGAGATAAAATGCTGATCACTCCTACTGGGCAATTTCACAAATG FGEEFFFEF=GFFFGBDGDEGGGGFGGGFGFGGFGGGGGGEFGGGGAFGDGGEGGGGGGGGGGGGGGGGGGGFGGGDGGGFGGFGGGGGGGFGGGGGGGG ERR024179.10716531 20:15492 1M:1X:1M:1X:1M:1D:2M:2I:91M: XM:2
variant 20:15500:T:TTGGTATCTAG ins->9 81 0 M carryover 0  === ins<- 6 carry 8 newms:0:2 added 0 pos 15499 l2 6 NEWCIGAR_RL: 5M 1D 2I 2I 91M


=========================================================================================================

## poorly aligned read that cannot be fixed
CCGATCTTAAATGGAAAGCAGAATATGAAAAATGGCATTTCACTCTGTTTGCTGCTATGACAAAAATACATATGCAAATACAAAATACATATGCAAATAC DFEC@@>>HCCEFHIIGHHEIGIIIIJJIGGGGIHHFIGF??GFCEDAGHJIIHGJJIGHJJIHHF>@JHGJJJJJIHIEJGJIHHFGHHHHDDDDD?@@ D3NJ6HQ1:258:D12WJACXX:2:1110:9562:33773 7:127250327 1M:1X:1X:2M:1I:1X:93M:
variant 7:127250424:TACAAAATACATATG:T del->98 2  ===


## example of read aligned using clipped porotion of read 
CTCTGTTTGCTGCTATGACAAAAATACATATGCAAATACAAAATACATATGCAAATACAAAATACATATGACAAAAATACATAATTTTCTTAGATTAAGA @<@DDDDFDDHFHGEEGGGFIIGIGGEHJEIEFHEEGDFHGGCDDGHGEEGHIIADGG@BG?FHGCHGHIGGHGHG@EHEFHEEHE@BDDFBCEEDEEEA D3NJ6HQ1:258:D12WJACXX:3:1209:7309:21783 7:127250368 76M:24S:
variant 7:127250424:TACAAAATACATATG:T del->56 20 newms:0:0 MM 21:0 added 24 | NEWCIGAR_LR: 56M 14D 44M  === del:69

## two equally good gapped alignments
ATGCAAATACAAAATACATATGACAAAAATACATAATTTTCTTAGATTAAGAAGTTACAGTAAATTTTCTTAGATGTGGATATATTATTGTGATTATGTA B?@FFDD?AD=D3<E<::AH<A<:<:AAF;<<:*CGIAHI<?CGD49D49:*0?FD9D8?HB:89B=C===8=)>=FHA3B4@@C=?A=C;A37?DDDBD D3NJ6HQ1:259:D10C5ACXX:3:1116:15784:25138 7:127250438 8S:92M:
variant 7:127250424:TACAAAATACATATG:T  === del:7 S....8 0 8 newms:0:0 added 8 NEWCIGAR_RL: 8M 14D 92M
variant 7:127250438:G:GCAAAT ins->8 87 0 M carryover 0  === ins<- 7 carry 0 S....3 0 3 newms:0:0 added 3 NEWCIGAR_RL: 3M 5I 92M




D3NJ6HQ1:258:D12WJACXX:2:1306:12676:5405 AAAAAATTCCCCCCCGGGAGCCTATCCTCCCTGCAGAAACCACTATAAAGGCTCTGCCCACATTGCCCCCGGCTCCCTCTGCCTCCTGATGGATGCCCTG 5563890 D3NJ6HQ1:258:D12WJACXX:2:1306:12676:5405 0 1 25S 3M 1X 69M 1X 1X variant 1:5563960:GC:G del->95 5 newms0:1 added 0 | NEWCIGAR_LR: 25S 70M 1D 5M

D3NJ6HQ1:259:D10C5ACXX:3:1209:15663:93571 ACAGAAATTATCCACACGAGCCTATCCTTCCTGCAGAAACCACTATAAAGGCTCTGCCCACATTGCCCCCGGCTCCCTCTGCCTCCTGATGGATGCCCTG 5563865 D3NJ6HQ1:259:D10C5ACXX:3:1209:15663:93571 0 1 98M 1X 1X variant 1:5563960:GC:G del->95 5 newms0:0 MM 0:0 added 0 | NEWCIGAR_LR: 95M 1D 5M

GGGGGGGCAGGGTGTGGTGCAGATCTTCCCCATGCTTTGGCTTGCAGACACGGCGCCCTCGAGGCCTCTGGCTTTATCTTCACGTGGCTCCTTCCTGCGT BBB@8A?CBBBBA??A@@CCC::?<<BBB@CCCCC?CA<9CCCCCCBCA9EEAIIIIIIHGIGIIHIHCHBIGIHGGHGHE?GEHGDF?FHBDDDDD@@@ D3NJ6HQ1:259:D10C5ACXX:1:1205:2997:36600 1:3120147 6M:1X:46M:1X:46M:
variant 1:3120146:CG:C  === del<--1 newms1:0 added 0 NEWCIGAR_RL: 100M 1D

GAGTCTCTGCGTCTCCTTCTCTCTGTGTCTCTGTCTCTCTCTTCTCTCTGCCTCCTTCCTCCCTCTCTCAACCTTCCGTCCCTGCCACCTGTTTCCACCA CBBFFFFFGHHHHJJJJJJJJJIEIHIGIIJGIHGIHIJIJJJJJJJJIJIJJJJJJIJJGGJIJJJJJIIJHHHHFFDFFDEEDBACBDD>CACCEC@? D3NJ6HQ1:259:D10C5ACXX:3:2314:19408:26306 1:20617973 1M:1X:2M:2D:1X:95M:
variant 1:20617980:G:GTC ins->5 93 1 M carryover 0  === ins<- 4 carry 1 newms1:1 added 0 NEWCIGAR_RL: 4M 2D 1I 95M

ATCTCAGAAAAAAAAATGGAGGTGTGACTAATTGGATGTGGGAGTTTACAATCCTGTTGGGATGGGAAATCCTACCCATAGAACCTCTCCCTGACTCCTA C>>:3C?B>@BDDC@<CDCA?@:B@CCFDHFHEHGHHAEEF;FHCFDFH@JIGEFIIIIGDGHD??HHD9IGGDHF9GIHFFFGHGHDDHHFDDEDF@@@ D3NJ6HQ1:259:D10C5ACXX:4:1110:1568:15185 1:120613814 1M:2I:1X:3M:1D:93M:
variant 1:120613816:ACAG:A del->4 3  === del:6
variant 1:120613817:C:CAAA ins->5 -1 2 M carryover 1  === ins<- 4 carry 1 newms1:0 added 0 NEWCIGAR_RL: 2I 3I 2M 1D 93M
variant 1:120613817:C:CAAAA ins->5 -2 2 M carryover 2  === ins<- 4 carry 2 newms1:0 added 0 NEWCIGAR_RL: 1I 4I 2M 1D 93M
variant 1:120613819:G:GA  === ins<- 6 carry 0
variant 1:120613819:G:GAA  === ins<- 6 carry 0
variant 1:120613819:G:GAAA  === ins<- 6 carry 0
variant 1:120613819:G:GAAAA  === ins<- 6 carry 0
variant 1:120613819:G:GAAAAA  === ins<- 6 carry 1 newms1:0 added 0 NEWCIGAR_RL: 2I 5I 1D 93M
variant 1:120613819:GA:G  ===

CCCACTTGTACCCAGGTTTGATCACCCCCCCTACTCTCCTGCCCTGGAAGTAACTACTATTCTGGTTATAGTCTCTTAATATCTATATCTATATCTATAT ?>34CC@CCAB??>BA@:A>3<<59-HIGC=8)DCB<IHHJJJIIIJIJIIIGGGDJJIHDGGIJJJJJJJJJIJJJJJJJIJJJJJHHHHHFFFFFCC@ D3NJ6HQ1:258:D12WJACXX:1:1207:7452:56477 1:145208014 25M:1X:68M:1X:3M:2D:2M:
variant 1:145208092:A:AATATCT ins->78 14 78 M carryover 0 newms:1:2 MM 1:0 added 0 | NEWCIGAR_LR: 78M 6I 14M 2D 2M  === ins<- 77 carry 0
## extra 2D after insertion left as it is!! although it can be changed into matches...
~                                



====================================== dec 30 2012 ==================================================

## something wrong with indel overlap 

2S:0C:0A:96M: D3NJ6HQ1:258:D12WJACXX:3:2111:9976:96257 	7,159073555,2S98M,2 j 1590735 start 159073553 end 159073653 XC:2 16 ov:7775  check
del->3 97 del<-3 newms1:0 added 0 2S 2M 1D 96M var:159073556,-1,T
var:420085,-1,T
var:1207526,1,C
var:1419855,3,TCT
var:1462033,1,T
var:1814589,-4,ACAC
var:1992635,-1,A
var:2070855,-2,TA
var:2071262,3,GAC
var:2098795,1,T
var:2159672,4,AAAT
var:2162402,1,T


## fix these reads, counting mismatches in new alignment
17S:49M:0A:31M:0T:0G: D3NJ6HQ1:259:D10C5ACXX:3:1311:7081:80433  1,5563883,17S83M,3 j 55638 start 5563866 end 5563966 XC:17 16 ov:1  check
del->95 5 17S 78M 1D 5M newms0:1 added 0 | del<-95 var:5563961,-1,C

segfault ??



[vbansal-scripps@tcc-5-14 BAMbasedVariantCaller]$ samtools view /projects/stsi3/PROJECTS/T2D-pooledseq/T2D-pooledseq-mergedbams/G1P1.merged.picard.bam 7:127250419-127250440 | ../INDELS/INDELREALIGNER stdin /home/vbansal-scripps/GENOMES/NCBI37/chr7.fa PAX4.indelcandidates > c   


splitmapper -> old code that works directly from sam file and outputs split-indels and VCF indels

/home/vbansal-scripps/bin/samtools-0.1.18/samtools view /projects/stsi3/PROJECTS/T2D-pooledseq/T2D-pooledseq-mergedbams/$1.merged.picard.bam | ./SPLITMAPPER --sam stdin --ref /projects/stsi/vbansal/T2D-pooledseq-july2012/target/ncbi37.fa > $1.splitindels.dec242012


testmapper -> new code that is still under development, similar to BLAT...

/home/vbansal-scripps/bin/samtools-0.1.18/samtools view /projects/stsi3/PROJECTS/T2D-pooledseq/T2D-pooledseq-mergedbams/G1P1.merged.picard.bam | ~/PROGRAMS/JOINTCODE-coral/INDELS/testmapper --sam stdin --ref /home/vbansal-scripps/GENOMES/NCBI37/chr1-NCBI37.fa 


./INDELrealigner --bam /projects/stsi/vbansal/Haplotype-assembly/NA18507_chr6_chr20_bams_hapcut/NA18507.300bp.sorted.bam.chr20 --VCF NA18507.chr20.vcf --ref /home/vbansal-scripps/GENOMES/1000genomes-huref/single-chromosomes/chr20.fa  > NA18507.chr20.realigned &

[vbansal-scripps@tcc-5-10 newindelcode-jan12013]$ python parse_samfile_indels_vcf.py /projects/stsi/vbansal/Haplotype-assembly/NA18507_chr6_chr20_bams_hapcut/NA18507.300bp.sorted.bam.chr20 /home/vbansal-scripps/GENOMES/1000genomes-huref/single-chromosomes/chr20.fa 3 > NA18507.chr20.vcf

